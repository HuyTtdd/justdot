set-option -g focus-events on

# nvim as editor
set-option -g editor nvim

# esc delay
set -s escape-time 0

# preload session
bind S source-file ~/.tmux/X

# Start windows and panes at 1
set -g base-index 1
setw -g pane-base-index 1

# Reset window's number
set-option -g renumber-windows on

# color
set -g default-terminal 'tmux-256color'
set -ga terminal-overrides ',*:Tc'

# reload
bind-key r source-file ~/.tmux.conf \; display-message "Into the Unknown..."

# vi mode
set-window-option -g mode-keys vi

# status bar refresh interval
set-option -g status-interval 5

# copy mode
set-option -s set-clipboard off
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-pipe "xclip -sel clip -i"

# remap prefix
unbind C-b
set-option -g prefix M-a
bind-key M-a send-prefix

# slit panel
bind v split-window -h
bind - split-window -v

# panel navigate
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

# resize
bind-key -r '<' resize-pane -L 5
bind-key -r '>' resize-pane -R 5
bind-key -r '+' resize-pane -U 5
bind-key -r '_' resize-pane -D 5

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l

# max width for right status
set-option -g status-right-length 70

# border style
set-window-option -g pane-border-lines simple

# color define
cattext=#f9cded
catline=#24273a
catactiveborder=#dec1db
catborder=#473945
catactivewindow=#494d64

# status 
set-option -g status "on"
set-option -g status-style bg=$catline,fg=$cattext
set-window-option -g window-status-style bg=$catline,fg=$cattext
set-window-option -g window-status-current-style bg=$catactivewindow,fg=$cattext
set-option -g pane-active-border-style fg=$catactiveborder
set-option -g pane-border-style fg=$catborder

set-window-option -g window-status-separator ''
set-option -g status-left "#[bg=#f5bde6, fg=#1e2030] #{?client_prefix,ï†°,#S} #[nobold, noitalics, nounderscore, bg=$catline, fg=$cattext]"
set-option -g status-right "#(fish -c '__music_current_song #{window_width}') %Y-%m-%d %H:%M #[bg=#f5bde6, fg=#1e2030] #{USER}@#(hostnamectl hostname) "

set-window-option -g window-status-current-format "#[bold] #W #[nobold, noitalics, nounderscore]"
set-window-option -g window-status-format "#[noitalics] #W #[noitalics]"

set-option -g message-style bg=$catactiveborder,fg=$catline
set-option -g message-command-style bg=$catline,fg=$catactiveborder
